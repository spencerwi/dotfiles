# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/snapd/desktop/:/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share"

# XDG configuration stuff, via xdg-ninja
export ANDROID_HOME="$XDG_DATA_HOME/android"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
	PATH="$HOME/.local/bin:$PATH"
fi

# Stack
if [ -d "$HOME/.stack/programs/x86_64-linux/ghc-7.10.2/bin" ] ; then
    PATH="/home/spencer/.stack/programs/x86_64-linux/ghc-7.10.2/bin:$PATH"
fi

# Stack
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# Cargo (rust)
if [ -d "$CARGO_HOME/bin" ] ; then
    PATH="$CARGO_HOME/bin:$PATH"
fi

# Swift 
if [ -d "$HOME/apps/swift/usr/bin" ] ; then
    PATH="$HOME/apps/swift/usr/bin:$PATH"
fi

# Kobalt
if [ -d "$HOME/apps/kobalt/kobalt-0.931/bin" ] ; then
    PATH="$HOME/apps/kobalt/kobalt-0.931/bin:$PATH"
fi

# Crystal scry
if [ -d "$HOME/apps/scry/bin/linux" ] ; then
    PATH="$HOME/apps/scry/bin/linux:$PATH"
fi

# Dotnet tools

if [ -d "$HOME/.dotnet/tools" ] ; then
    PATH="$HOME/.dotnet/tools:$PATH"
fi

export EDITOR="vim"
if command -v nvim &>/dev/null ; then
    export EDITOR="nvim"
fi

export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"

. "$CARGO_HOME/env"

if [ -d "$HOME/apps/jdt-language-server/" ] ; then
	export JDTLS_HOME="$HOME/apps/jdt-language-server"
fi

if [ -d "/snap/dotnet-sdk/current" ] ; then
	export DOTNET_ROOT="/snap/dotnet-sdk/current"
fi

if [ -d "/opt/apache-maven/current" ] ; then
	export MAVEN_HOME="/opt/apache-maven/current";
	PATH="$MAVEN_HOME/bin:$PATH"
fi

# If there's a custom lynx stylesheet in the XDG_CONFIG_DIR directory, use that
if [ -f "$HOME/.config/lynx.lss" ] ; then
	export LYNX_LSS="$HOME/.config/lynx.lss"
fi

if [ -d "$HOME/.nimble/bin" ] ; then
	PATH="$HOME/.nimble/bin:$PATH"
fi

if [ -d "$HOME/.local/share/ponyup/bin" ] ; then
	PATH="$HOME/.local/share/ponyup/bin:$PATH"
fi

